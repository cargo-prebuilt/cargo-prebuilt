name: Rust Build, Test, and Release
## Name: Rust Build, Test, and Release
## Author: harmless-tech
## Version: cache-based-1.0.1
## Git Repo: https://github.com/harmless-tech/rust-github-actions

on:
  push:
    tags:
      - "v**"
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  bin-name: cargo-prebuilt

jobs:
  check-fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install nightly
        run: rustup toolchain install nightly --allow-downgrade -c rustfmt
      - name: Rustfmt Check
        run: cargo +nightly fmt --check

  check-clippy:
    runs-on: ubuntu-latest
    needs: [ deps ]
    steps:
      - uses: actions/checkout@v3
      - name: Get deps from cache
        uses: actions/cache@v3
        with:
          path: |
            .cargo-store
          key: deps-cache-${{ hashFiles('**/Cargo.lock') }}
          enableCrossOsArchive: true
          fail-on-cache-miss: true
      - name: Move deps
        run: mv ./.cargo-store/* ~/.cargo
      - name: Update Rust
        run: rustup update
      - name: Rust Version
        run: rustc --version
      - name: Clippy Check
        run: cargo clippy --all-targets --all-features --verbose --workspace --release --locked -- -D warnings

  deps:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        id: cache
        with:
          path: |
            .cargo-store
          key: deps-cache-${{ hashFiles('**/Cargo.lock') }}
          enableCrossOsArchive: true
      - name: Move deps
        if: ${{ steps.cache.outputs.cache-hit }}
        run: mv ./.cargo-store/* ~/.cargo
      - name: Create Folders
        if: ${{ !steps.cache.outputs.cache-hit }}
        run: |
          mkdir -p ~/.cargo/registry/index
          mkdir -p ~/.cargo/registry/cache
          mkdir -p ~/.cargo/git/db
          mkdir -p ./.cargo-store
      - name: Update Rust
        run: rustup update
      - name: Rust Version
        run: rustc --version
      - uses: crow-rest/cargo-prebuilt-action@v1
      - name: Install tools
        run: cargo prebuilt cargo-audit
      - name: Download Deps
        if: ${{ !steps.cache.outputs.cache-hit }}
        run: cargo fetch --verbose --locked
      - name: Deps Report
        run: |
          test -f Cargo.lock || cargo generate-lockfile --verbose
          echo "### Deps:" >> $GITHUB_STEP_SUMMARY
          echo "Generated on: $(date --utc)" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          cargo tree --verbose -e normal,build --locked >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
      - name: Audit Report
        run: |
          echo "### Audit:" >> $GITHUB_STEP_SUMMARY
          echo "Generated on: $(date --utc)" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          cargo audit >> $GITHUB_STEP_SUMMARY || true
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
      - name: Store Deps
        if: ${{ !steps.cache.outputs.cache-hit }}
        run: |
          mkdir -p ./.cargo-store/registry
          mkdir -p ./.cargo-store/git
          cp -r ~/.cargo/registry/index ./.cargo-store/registry
          cp -r ~/.cargo/registry/cache ./.cargo-store/registry
          cp -r ~/.cargo/git/db ./.cargo-store/git

  release:
    outputs:
      tag: ${{ github.ref_name }}
      name: ${{ github.ref_name }}
      prerelease: ${{ steps.regex-tag.outputs.match == '' }}
    runs-on: ubuntu-latest
    needs: [ check-fmt, check-clippy ]
    steps:
      - uses: actions/checkout@v3
      - uses: KyoriPowered/action-regex-match@v3
        id: regex-tag
        with:
          text: ${{ github.ref }}
          regex: '^refs\/tags\/v\d+\.\d+\.\d+$'

  publish:
    runs-on: ubuntu-latest
    needs: [ release, check-fmt, check-clippy, x86_64-unknown-linux-gnu, x86_64-apple-darwin, aarch64-apple-darwin, x86_64-pc-windows-msvc, aarch64-pc-windows-msvc, i686-pc-windows-msvc, cross ]
    steps:
      - uses: actions/checkout@v3
      - name: Get deps from cache
        uses: actions/cache@v3
        with:
          path: |
            .cargo-store
          key: deps-cache-${{ hashFiles('**/Cargo.lock') }}
          enableCrossOsArchive: true
          fail-on-cache-miss: true
      - name: Move deps
        run: mv ./.cargo-store/* ~/.cargo
      - name: Update Rust
        run: rustup update
      - name: Rust Version
        run: rustc --version
      - name: Publish
        run: cargo publish --verbose --locked --token ${CRATES_TOKEN}
        env:
          CRATES_TOKEN: ${{ secrets.CRATES_TOKEN }}

  x86_64-unknown-linux-gnu:
    runs-on: ubuntu-latest
    needs: [ deps, release ]
    steps:
      - uses: actions/checkout@v3
      - name: Get deps from cache
        uses: actions/cache@v3
        with:
          path: |
            .cargo-store
          key: deps-cache-${{ hashFiles('**/Cargo.lock') }}
          enableCrossOsArchive: true
          fail-on-cache-miss: true
      - name: Move deps
        run: mv ./.cargo-store/* ~/.cargo
      - name: Update Rust
        run: rustup update
      - name: Rust Version
        run: rustc --version
      - uses: crow-rest/cargo-prebuilt-action@v1
      - name: Install tools
        run: cargo prebuilt cargo-auditable,coreutils
      - name: Run tests
        run: cargo test --verbose --workspace --all-features --release --locked
      - name: Build
        run: cargo auditable build --verbose --workspace --release --locked
      - name: Artifact
        uses: actions/upload-artifact@v3
        with:
          name: x86_64-unknown-linux-gnu
          path: |
            target/release/${{ env.bin-name }}
      - name: Tar
        run: tar czvf x86_64-unknown-linux-gnu.tar.gz -C ./target/release ${{ env.bin-name }}
      - name: Hash
        run: echo "$(coreutils sha256sum x86_64-unknown-linux-gnu.tar.gz)" > x86_64-unknown-linux-gnu.sha256
      - name: Artifact
        uses: actions/upload-artifact@v3
        with:
          name: x86_64-unknown-linux-gnu
          path: |
            x86_64-unknown-linux-gnu.tar.gz
            x86_64-unknown-linux-gnu.sha256
      - name: Release Artifact
        uses: svenstaro/upload-release-action@2.5.0
        with:
          tag: ${{ needs.release.outputs.tag }}
          release_name: ${{ needs.release.outputs.name }}
          overwrite: true
          prerelease: ${{ needs.release.outputs.prerelease }}
          file_glob: true
          file: x86_64-unknown-linux-gnu.*

  x86_64-apple-darwin:
    runs-on: macos-latest
    needs: [ deps, release ]
    steps:
      - uses: actions/checkout@v3
      - name: Get deps from cache
        uses: actions/cache@v3
        with:
          path: |
            .cargo-store
          key: deps-cache-${{ hashFiles('**/Cargo.lock') }}
          enableCrossOsArchive: true
          fail-on-cache-miss: true
      - name: Move deps
        run: mv ./.cargo-store/* ~/.cargo
      - name: Update Rust
        run: rustup update
      - name: Rust Version
        run: rustc --version
      - uses: crow-rest/cargo-prebuilt-action@v1
      - name: Install tools
        run: cargo prebuilt cargo-auditable,coreutils
      - name: Run tests
        run: cargo test --verbose --workspace --all-features --release --locked
      - name: Build
        run: cargo auditable build --verbose --workspace --release --locked
      - name: Artifact
        uses: actions/upload-artifact@v3
        with:
          name: x86_64-apple-darwin
          path: |
            target/release/${{ env.bin-name }}
      - name: Tar
        run: tar czvf x86_64-apple-darwin.tar.gz -C ./target/release ${{ env.bin-name }}
      - name: Hash
        run: echo "$(coreutils sha256sum x86_64-apple-darwin.tar.gz)" > x86_64-apple-darwin.sha256
      - name: Artifact
        uses: actions/upload-artifact@v3
        with:
          name: x86_64-apple-darwin
          path: |
            x86_64-apple-darwin.tar.gz
            x86_64-apple-darwin.sha256
      - name: Release Artifact
        uses: svenstaro/upload-release-action@2.5.0
        with:
          tag: ${{ needs.release.outputs.tag }}
          release_name: ${{ needs.release.outputs.name }}
          overwrite: true
          prerelease: ${{ needs.release.outputs.prerelease }}
          file_glob: true
          file: x86_64-apple-darwin.*

  aarch64-apple-darwin:
    runs-on: macos-latest
    needs: [ deps, release ]
    steps:
      - uses: actions/checkout@v3
      - name: Get deps from cache
        uses: actions/cache@v3
        with:
          path: |
            .cargo-store
          key: deps-cache-${{ hashFiles('**/Cargo.lock') }}
          enableCrossOsArchive: true
          fail-on-cache-miss: true
      - name: Move deps
        run: mv ./.cargo-store/* ~/.cargo
      - name: Update Rust
        run: rustup update
      - name: Rust Version
        run: rustc --version
      - name: Add Rust target
        run: rustup target add aarch64-apple-darwin
      - uses: crow-rest/cargo-prebuilt-action@v1
      - name: Install tools
        run: cargo prebuilt cargo-auditable,coreutils
      - name: Build
        run: cargo auditable build --verbose --workspace --release --locked --target aarch64-apple-darwin
      - name: Artifact
        uses: actions/upload-artifact@v3
        with:
          name: aarch64-apple-darwin
          path: |
            target/aarch64-apple-darwin/release/${{ env.bin-name }}
      - name: Tar
        run: tar czvf aarch64-apple-darwin.tar.gz -C ./target/aarch64-apple-darwin/release ${{ env.bin-name }}
      - name: Hash
        run: echo "$(coreutils sha256sum aarch64-apple-darwin.tar.gz)" > aarch64-apple-darwin.sha256
      - name: Artifact
        uses: actions/upload-artifact@v3
        with:
          name: aarch64-apple-darwin
          path: |
            aarch64-apple-darwin.tar.gz
            aarch64-apple-darwin.sha256
      - name: Release Artifact
        uses: svenstaro/upload-release-action@2.5.0
        with:
          tag: ${{ needs.release.outputs.tag }}
          release_name: ${{ needs.release.outputs.name }}
          overwrite: true
          prerelease: ${{ needs.release.outputs.prerelease }}
          file_glob: true
          file: aarch64-apple-darwin.*

  x86_64-pc-windows-msvc:
    runs-on: windows-latest
    needs: [ deps, release ]
    steps:
      - uses: actions/checkout@v3
      - name: Change file endings in Cargo.lock
        shell: pwsh
        run: (Get-Content -Raw Cargo.lock) -replace "`r`n","`n" | Set-Content Cargo.lock -NoNewline
      - name: Get deps from cache
        uses: actions/cache@v3
        with:
          path: |
            .cargo-store
          key: deps-cache-${{ hashFiles('**/Cargo.lock') }}
          enableCrossOsArchive: true
          fail-on-cache-miss: true
      - name: Move deps
        run: mv ./.cargo-store/* ~/.cargo
      - name: Update Rust
        run: rustup update
      - name: Rust Version
        run: rustc --version
      - uses: crow-rest/cargo-prebuilt-action@v1
      - name: Install tools
        run: cargo prebuilt cargo-auditable,coreutils
      - name: Run tests
        run: cargo test --verbose --workspace --all-features --release --locked
      - name: Build
        run: cargo auditable build --verbose --workspace --release --locked
      - name: Artifact
        uses: actions/upload-artifact@v3
        with:
          name: x86_64-pc-windows-msvc
          path: |
            target/release/${{ env.bin-name }}.exe
      - name: Zip
        uses: vimtor/action-zip@v1.1
        with:
          files: ./target/release/${{ env.bin-name }}.exe
          dest: x86_64-pc-windows-msvc.zip
      - name: Hash
        run: echo "$(coreutils sha256sum x86_64-pc-windows-msvc.zip)" > x86_64-pc-windows-msvc.sha256
      - name: Artifact
        uses: actions/upload-artifact@v3
        with:
          name: x86_64-pc-windows-msvc
          path: |
            x86_64-pc-windows-msvc.zip
            x86_64-pc-windows-msvc.sha256
      - name: Release Artifact
        uses: svenstaro/upload-release-action@2.5.0
        with:
          tag: ${{ needs.release.outputs.tag }}
          release_name: ${{ needs.release.outputs.name }}
          overwrite: true
          prerelease: ${{ needs.release.outputs.prerelease }}
          file_glob: true
          file: x86_64-pc-windows-msvc.*

  aarch64-pc-windows-msvc:
    runs-on: windows-latest
    needs: [ deps, release ]
    steps:
      - uses: actions/checkout@v3
      - name: Change file endings in Cargo.lock
        shell: pwsh
        run: (Get-Content -Raw Cargo.lock) -replace "`r`n","`n" | Set-Content Cargo.lock -NoNewline
      - name: Get deps from cache
        uses: actions/cache@v3
        with:
          path: |
            .cargo-store
          key: deps-cache-${{ hashFiles('**/Cargo.lock') }}
          enableCrossOsArchive: true
          fail-on-cache-miss: true
      - name: Move deps
        run: mv ./.cargo-store/* ~/.cargo
      - name: Update Rust
        run: rustup update
      - name: Rust Version
        run: rustc --version
      - name: Add Rust target
        run: rustup target add aarch64-pc-windows-msvc
      - uses: crow-rest/cargo-prebuilt-action@v1
      - name: Install tools
        run: cargo prebuilt cargo-auditable,coreutils
      - name: Build
        run: cargo auditable build --verbose --workspace --release --locked --target aarch64-pc-windows-msvc
      - name: Artifact
        uses: actions/upload-artifact@v3
        with:
          name: aarch64-pc-windows-msvc
          path: |
            target/aarch64-pc-windows-msvc/release/${{ env.bin-name }}.exe
      - name: Zip
        uses: vimtor/action-zip@v1.1
        with:
          files: ./target/aarch64-pc-windows-msvc/release/${{ env.bin-name }}.exe
          dest: aarch64-pc-windows-msvc.zip
      - name: Hash
        run: echo "$(coreutils sha256sum aarch64-pc-windows-msvc.zip)" > aarch64-pc-windows-msvc.sha256
      - name: Artifact
        uses: actions/upload-artifact@v3
        with:
          name: aarch64-pc-windows-msvc
          path: |
            aarch64-pc-windows-msvc.zip
            aarch64-pc-windows-msvc.sha256
      - name: Release Artifact
        uses: svenstaro/upload-release-action@2.5.0
        with:
          tag: ${{ needs.release.outputs.tag }}
          release_name: ${{ needs.release.outputs.name }}
          overwrite: true
          prerelease: ${{ needs.release.outputs.prerelease }}
          file_glob: true
          file: aarch64-pc-windows-msvc.*

  i686-pc-windows-msvc:
    runs-on: windows-latest
    needs: [ deps, release ]
    steps:
      - uses: actions/checkout@v3
      - name: Change file endings in Cargo.lock
        shell: pwsh
        run: (Get-Content -Raw Cargo.lock) -replace "`r`n","`n" | Set-Content Cargo.lock -NoNewline
      - name: Get deps from cache
        uses: actions/cache@v3
        with:
          path: |
            .cargo-store
          key: deps-cache-${{ hashFiles('**/Cargo.lock') }}
          enableCrossOsArchive: true
          fail-on-cache-miss: true
      - name: Move deps
        run: mv ./.cargo-store/* ~/.cargo
      - name: Update Rust
        run: rustup update
      - name: Rust Version
        run: rustc --version
      - name: Add Rust target
        run: rustup target add i686-pc-windows-msvc
      - uses: crow-rest/cargo-prebuilt-action@v1
      - name: Install tools
        run: cargo prebuilt cargo-auditable,coreutils
      - name: Run tests
        run: cargo test --verbose --workspace --all-features --release --locked --target i686-pc-windows-msvc
      - name: Build
        run: cargo auditable build --verbose --workspace --release --locked --target i686-pc-windows-msvc
      - name: Artifact
        uses: actions/upload-artifact@v3
        with:
          name: i686-pc-windows-msvc
          path: |
            target/i686-pc-windows-msvc/release/${{ env.bin-name }}.exe
      - name: Zip
        uses: vimtor/action-zip@v1.1
        with:
          files: ./target/i686-pc-windows-msvc/release/${{ env.bin-name }}.exe
          dest: i686-pc-windows-msvc.zip
      - name: Hash
        run: echo "$(coreutils sha256sum i686-pc-windows-msvc.zip)" > i686-pc-windows-msvc.sha256
      - name: Artifact
        uses: actions/upload-artifact@v3
        with:
          name: i686-pc-windows-msvc
          path: |
            i686-pc-windows-msvc.zip
            i686-pc-windows-msvc.sha256
      - name: Release Artifact
        uses: svenstaro/upload-release-action@2.5.0
        with:
          tag: ${{ needs.release.outputs.tag }}
          release_name: ${{ needs.release.outputs.name }}
          overwrite: true
          prerelease: ${{ needs.release.outputs.prerelease }}
          file_glob: true
          file: i686-pc-windows-msvc.*

  cross:
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-unknown-linux-musl
          - aarch64-unknown-linux-gnu
          - aarch64-unknown-linux-musl
          - x86_64-unknown-freebsd
          - x86_64-unknown-netbsd
          - x86_64-unknown-illumos
          - x86_64-sun-solaris
          - riscv64gc-unknown-linux-gnu
          - powerpc64-unknown-linux-gnu
          - powerpc64le-unknown-linux-gnu
          - s390x-unknown-linux-gnu
          - mips64-unknown-linux-gnuabi64
          - mips64-unknown-linux-muslabi64
          - mips64el-unknown-linux-gnuabi64
          - mips64el-unknown-linux-muslabi64
          - i686-unknown-linux-gnu
          - i686-unknown-linux-musl
          - i686-unknown-freebsd
          - armv7-unknown-linux-gnueabihf
          - armv7-unknown-linux-musleabihf
          - powerpc-unknown-linux-gnu
          - mips-unknown-linux-gnu
          - mips-unknown-linux-musl
          - mipsel-unknown-linux-gnu
          - mipsel-unknown-linux-musl
    runs-on: ubuntu-latest
    needs: [ deps, release ]
    steps:
      - uses: actions/checkout@v3
      - name: Get deps from cache
        uses: actions/cache@v3
        with:
          path: |
            .cargo-store
          key: deps-cache-${{ hashFiles('**/Cargo.lock') }}
          enableCrossOsArchive: true
          fail-on-cache-miss: true
      - name: Move deps
        run: mv ./.cargo-store/* ~/.cargo
      - name: Update Rust
        run: rustup update
      - name: Rust Version
        run: rustc --version
      - uses: crow-rest/cargo-prebuilt-action@v1
      - name: Install tools
        run: |
          cargo prebuilt cross,coreutils
          cross --version
      - name: Build
        run: cross build --verbose --workspace --release --locked --target ${{ matrix.target }}
      - name: Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}
          path: |
            target/${{ matrix.target }}/release/${{ env.bin-name }}
      - name: Tar
        run: tar czvf ${{ matrix.target }}.tar.gz -C ./target/${{ matrix.target }}/release ${{ env.bin-name }}
      - name: Hash
        run: echo "$(coreutils sha256sum ${{ matrix.target }}.tar.gz)" > ${{ matrix.target }}.sha256
      - name: Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}
          path: |
            ${{ matrix.target }}.tar.gz
            ${{ matrix.target }}.sha256
      - name: Release Artifact
        uses: svenstaro/upload-release-action@2.5.0
        with:
          tag: ${{ needs.release.outputs.tag }}
          release_name: ${{ needs.release.outputs.name }}
          overwrite: true
          prerelease: ${{ needs.release.outputs.prerelease }}
          file_glob: true
          file: ${{ matrix.target }}.*
