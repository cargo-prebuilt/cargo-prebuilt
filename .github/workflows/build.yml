name: Rust Build and Test
## Name: Rust Build and Test
## Author: harmless-tech
## Version: cache-based-1.0.0
## Git Repo: https://github.com/harmless-tech/rust-github-actions

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  bin-name: cargo-prebuilt

jobs:
  deps:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        id: cache
        with:
          path: |
            .cargo-store
          key: deps-cache-${{ hashFiles('**/Cargo.lock') }}
          enableCrossOsArchive: true
      - name: Move deps
        if: ${{ steps.cache.outputs.cache-hit }}
        run: mv ./.cargo-store/* ~/.cargo
      - name: Create Folders
        if: ${{ !steps.cache.outputs.cache-hit }}
        run: |
          mkdir -p ~/.cargo/registry/index
          mkdir -p ~/.cargo/registry/cache
          mkdir -p ~/.cargo/git/db
          mkdir -p ./.cargo-store
      - name: Update Rust
        run: rustup update
      - name: Rust Version
        run: rustc --version
      - uses: crow-rest/cargo-prebuilt-action@v1
      - name: Install tools
        run: cargo prebuilt cargo-audit
      - name: Download Deps
        if: ${{ !steps.cache.outputs.cache-hit }}
        run: cargo fetch --verbose --locked
      - name: Deps Report
        run: |
          echo "### Deps:" >> $GITHUB_STEP_SUMMARY
          echo "Generated on: $(date --utc)" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          cargo tree --verbose -e normal,build --locked >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
      - name: Audit Report
        run: |
          echo "### Audit:" >> $GITHUB_STEP_SUMMARY
          echo "Generated on: $(date --utc)" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          cargo audit >> $GITHUB_STEP_SUMMARY || true
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
      - name: Store Deps
        if: ${{ !steps.cache.outputs.cache-hit }}
        run: |
          mkdir -p ./.cargo-store/registry
          mkdir -p ./.cargo-store/git
          cp -r ~/.cargo/registry/index ./.cargo-store/registry
          cp -r ~/.cargo/registry/cache ./.cargo-store/registry
          cp -r ~/.cargo/git/db ./.cargo-store/git

  x86_64-unknown-linux-gnu:
    runs-on: ubuntu-latest
    needs: [ deps ]
    steps:
      - uses: actions/checkout@v3
      - name: Get deps from cache
        uses: actions/cache@v3
        with:
          path: |
            .cargo-store
          key: deps-cache-${{ hashFiles('**/Cargo.lock') }}
          enableCrossOsArchive: true
          fail-on-cache-miss: true
      - name: Move deps
        run: mv ./.cargo-store/* ~/.cargo
      - uses: actions/cache@v3
        with:
          path: |
            target
          key: ${{ runner.os }}-x86_64-unknown-linux-gnu-${{ hashFiles('**/Cargo.lock') }}
      - name: Update Rust
        run: rustup update
      - name: Rust Version
        run: rustc --version
      - uses: crow-rest/cargo-prebuilt-action@v1
      - name: Install tools
        run: cargo prebuilt cargo-auditable
      - name: Run tests
        run: cargo test --verbose --workspace --all-features --locked
      - name: Build
        run: cargo auditable build --verbose --workspace --locked
      - name: Artifact
        uses: actions/upload-artifact@v3
        with:
          name: x86_64-unknown-linux-gnu
          path: |
            target/debug/${{ env.bin-name }}

  x86_64-apple-darwin:
    runs-on: macos-latest
    needs: [ deps ]
    steps:
      - uses: actions/checkout@v3
      - name: Get deps from cache
        uses: actions/cache@v3
        with:
          path: |
            .cargo-store
          key: deps-cache-${{ hashFiles('**/Cargo.lock') }}
          enableCrossOsArchive: true
          fail-on-cache-miss: true
      - name: Move deps
        run: mv ./.cargo-store/* ~/.cargo
      - uses: actions/cache@v3
        with:
          path: |
            target
          key: ${{ runner.os }}-x86_64-apple-darwin-${{ hashFiles('**/Cargo.lock') }}
      - name: Update Rust
        run: rustup update
      - name: Rust Version
        run: rustc --version
      - uses: crow-rest/cargo-prebuilt-action@v1
      - name: Install tools
        run: cargo prebuilt cargo-auditable
      - name: Run tests
        run: cargo test --verbose --workspace --all-features --locked
      - name: Build
        run: cargo auditable build --verbose --workspace --locked
      - name: Artifact
        uses: actions/upload-artifact@v3
        with:
          name: x86_64-apple-darwin
          path: |
            target/debug/${{ env.bin-name }}

  aarch64-apple-darwin:
    runs-on: macos-latest
    needs: [ deps ]
    steps:
      - uses: actions/checkout@v3
      - name: Get deps from cache
        uses: actions/cache@v3
        with:
          path: |
            .cargo-store
          key: deps-cache-${{ hashFiles('**/Cargo.lock') }}
          enableCrossOsArchive: true
          fail-on-cache-miss: true
      - name: Move deps
        run: mv ./.cargo-store/* ~/.cargo
      - uses: actions/cache@v3
        with:
          path: |
            target
          key: ${{ runner.os }}-aarch64-apple-darwin-${{ hashFiles('**/Cargo.lock') }}
      - name: Update Rust
        run: rustup update
      - name: Rust Version
        run: rustc --version
      - name: Add Rust target
        run: rustup target add aarch64-apple-darwin
      - uses: crow-rest/cargo-prebuilt-action@v1
      - name: Install tools
        run: cargo prebuilt cargo-auditable
      - name: Build
        run: cargo auditable build --verbose --workspace --locked --target aarch64-apple-darwin
      - name: Artifact
        uses: actions/upload-artifact@v3
        with:
          name: aarch64-apple-darwin
          path: |
            target/aarch64-apple-darwin/debug/${{ env.bin-name }}

  x86_64-pc-windows-msvc:
    runs-on: windows-latest
    needs: [ deps ]
    steps:
      - uses: actions/checkout@v3
      - name: Change file endings in Cargo.lock
        shell: pwsh
        run: (Get-Content -Raw Cargo.lock) -replace "`r`n","`n" | Set-Content Cargo.lock -NoNewline
      - name: Get deps from cache
        uses: actions/cache@v3
        with:
          path: |
            .cargo-store
          key: deps-cache-${{ hashFiles('**/Cargo.lock') }}
          enableCrossOsArchive: true
          fail-on-cache-miss: true
      - name: Move deps
        run: mv ./.cargo-store/* ~/.cargo
      - uses: actions/cache@v3
        with:
          path: |
            target
          key: ${{ runner.os }}-x86_64-pc-windows-msvc-${{ hashFiles('**/Cargo.lock') }}
      - name: Update Rust
        run: rustup update
      - name: Rust Version
        run: rustc --version
      - uses: crow-rest/cargo-prebuilt-action@v1
      - name: Install tools
        run: cargo prebuilt cargo-auditable
      - name: Run tests
        run: cargo test --verbose --workspace --all-features --locked
      - name: Build
        run: cargo auditable build --verbose --workspace --locked
      - name: Artifact
        uses: actions/upload-artifact@v3
        with:
          name: x86_64-pc-windows-msvc
          path: |
            target/debug/${{ env.bin-name }}.exe

  aarch64-pc-windows-msvc:
    runs-on: windows-latest
    needs: [ deps ]
    steps:
      - uses: actions/checkout@v3
      - name: Change file endings in Cargo.lock
        shell: pwsh
        run: (Get-Content -Raw Cargo.lock) -replace "`r`n","`n" | Set-Content Cargo.lock -NoNewline
      - name: Get deps from cache
        uses: actions/cache@v3
        with:
          path: |
            .cargo-store
          key: deps-cache-${{ hashFiles('**/Cargo.lock') }}
          enableCrossOsArchive: true
          fail-on-cache-miss: true
      - name: Move deps
        run: mv ./.cargo-store/* ~/.cargo
      - uses: actions/cache@v3
        with:
          path: |
            target
          key: ${{ runner.os }}-aarch64-pc-windows-msvc-${{ hashFiles('**/Cargo.lock') }}
      - name: Update Rust
        run: rustup update
      - name: Rust Version
        run: rustc --version
      - name: Add Rust target
        run: rustup target add aarch64-pc-windows-msvc
      - uses: crow-rest/cargo-prebuilt-action@v1
      - name: Install tools
        run: cargo prebuilt cargo-auditable
      - name: Build
        run: cargo auditable build --verbose --workspace --locked --target aarch64-pc-windows-msvc
      - name: Artifact
        uses: actions/upload-artifact@v3
        with:
          name: aarch64-pc-windows-msvc
          path: |
            target/aarch64-pc-windows-msvc/debug/${{ env.bin-name }}.exe

  i686-pc-windows-msvc:
    runs-on: windows-latest
    needs: [ deps ]
    steps:
      - uses: actions/checkout@v3
      - name: Change file endings in Cargo.lock
        shell: pwsh
        run: (Get-Content -Raw Cargo.lock) -replace "`r`n","`n" | Set-Content Cargo.lock -NoNewline
      - name: Get deps from cache
        uses: actions/cache@v3
        with:
          path: |
            .cargo-store
          key: deps-cache-${{ hashFiles('**/Cargo.lock') }}
          enableCrossOsArchive: true
          fail-on-cache-miss: true
      - name: Move deps
        run: mv ./.cargo-store/* ~/.cargo
      - uses: actions/cache@v3
        with:
          path: |
            target
          key: ${{ runner.os }}-i686-pc-windows-msvc-${{ hashFiles('**/Cargo.lock') }}
      - name: Update Rust
        run: rustup update
      - name: Rust Version
        run: rustc --version
      - name: Add Rust target
        run: rustup target add i686-pc-windows-msvc
      - uses: crow-rest/cargo-prebuilt-action@v1
      - name: Install tools
        run: cargo prebuilt cargo-auditable
      - name: Run tests
        run: cargo test --verbose --workspace --all-features --locked --target i686-pc-windows-msvc
      - name: Build
        run: cargo auditable build --verbose --workspace --locked --target i686-pc-windows-msvc
      - name: Artifact
        uses: actions/upload-artifact@v3
        with:
          name: i686-pc-windows-msvc
          path: |
            target/i686-pc-windows-msvc/debug/${{ env.bin-name }}.exe

  cross:
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-unknown-linux-musl
          - aarch64-unknown-linux-gnu
          - aarch64-unknown-linux-musl
          - x86_64-unknown-freebsd
          - x86_64-unknown-netbsd
          - x86_64-unknown-illumos
          - x86_64-sun-solaris
          - riscv64gc-unknown-linux-gnu
          - powerpc64-unknown-linux-gnu
          - powerpc64le-unknown-linux-gnu
          - s390x-unknown-linux-gnu
          - mips64-unknown-linux-gnuabi64
          - mips64-unknown-linux-muslabi64
          - mips64el-unknown-linux-gnuabi64
          - mips64el-unknown-linux-muslabi64
          - i686-unknown-linux-gnu
          - i686-unknown-linux-musl
          - i686-unknown-freebsd
          - armv7-unknown-linux-gnueabihf
          - armv7-unknown-linux-musleabihf
          - powerpc-unknown-linux-gnu
          - mips-unknown-linux-gnu
          - mips-unknown-linux-musl
          - mipsel-unknown-linux-gnu
          - mipsel-unknown-linux-musl
    runs-on: ubuntu-latest
    needs: [ deps ]
    steps:
      - uses: actions/checkout@v3
      - name: Get deps from cache
        uses: actions/cache@v3
        with:
          path: |
            .cargo-store
          key: deps-cache-${{ hashFiles('**/Cargo.lock') }}
          enableCrossOsArchive: true
          fail-on-cache-miss: true
      - name: Move deps
        run: mv ./.cargo-store/* ~/.cargo
      - uses: actions/cache@v3
        with:
          path: |
            target
          key: ${{ runner.os }}-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
      - name: Update Rust
        run: rustup update
      - name: Rust Version
        run: rustc --version
      - uses: crow-rest/cargo-prebuilt-action@v1
      - name: Install tools
        run: |
          cargo prebuilt cross
          cross --version
      - name: Build
        run: cross build --verbose --workspace --locked --target ${{ matrix.target }}
      - name: Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}
          path: |
            target/${{ matrix.target }}/debug/${{ env.bin-name }}
