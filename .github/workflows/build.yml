name: Rust Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-x86_64-unknown-linux-gnu-${{ hashFiles('**/Cargo.lock') }}
      - name: Update Rust
        run: rustup update
      - name: Rust Version
        run: rustc --version
      - name: Run tests
        run: cargo test --verbose --workspace --all-features
      - name: Build
        run: cargo build --verbose --workspace
      - name: Artifact
        uses: actions/upload-artifact@v3
        with:
          name: artifacts-linux-x64
          path: |
            target/debug/cargo-prebuilt

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-x86_64-apple-darwin-${{ hashFiles('**/Cargo.lock') }}
      - name: Update Rust
        run: rustup update
      - name: Rust Version
        run: rustc --version
      - name: Run tests
        run: cargo test --verbose --workspace --all-features
      - name: Build
        run: cargo build --verbose --workspace
      - name: Artifact
        uses: actions/upload-artifact@v3
        with:
          name: artifacts-macos-x64
          path: |
            target/debug/cargo-prebuilt

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-x86_64-pc-windows-msvc-${{ hashFiles('**/Cargo.lock') }}
      - name: Update Rust
        run: rustup update
      - name: Rust Version
        run: rustc --version
      - name: Run tests
        run: cargo test --verbose --workspace --all-features
      - name: Build
        run: cargo build --verbose --workspace
      - name: Artifact
        uses: actions/upload-artifact@v3
        with:
          name: artifacts-win-x64
          path: |
            target/debug/cargo-prebuilt.exe

  build-macos-arm64:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-aarch64-apple-darwin-${{ hashFiles('**/Cargo.lock') }}
      - name: Update Rust
        run: rustup update
      - name: Rust Version
        run: rustc --version
      - name: Add Rust target
        run: rustup target add aarch64-apple-darwin
      - name: MacOS SDK
        run: |
          export SDKROOT=$(xcrun -sdk macosx --show-sdk-path)
          export MACOSX_DEPLOYMENT_TARGET=$(xcrun -sdk macosx --show-sdk-platform-version)
      - name: Build
        run: cargo build --verbose --workspace --target=aarch64-apple-darwin
      - name: Artifact
        uses: actions/upload-artifact@v3
        with:
          name: artifacts-macos-aarch64
          path: |
            target/aarch64-apple-darwin/debug/cargo-prebuilt

  cross-builds:
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-musl
          - aarch64-unknown-linux-gnu
          - aarch64-unknown-linux-musl
          - riscv64gc-unknown-linux-gnu
          - powerpc64-unknown-linux-gnu
          - powerpc64le-unknown-linux-gnu
          - s390x-unknown-linux-gnu
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
      - name: Update Rust
        run: rustup update
      - name: Rust Version
        run: rustc --version
      - uses: taiki-e/install-action@v1
        with:
          tool: cross
      - name: Run tests
        run: cross test --verbose --workspace --all-features --target ${{ matrix.target }}
      - name: Build
        run: cross build --verbose --workspace --target ${{ matrix.target }}
      - name: Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}
          path: |
            target/${{ matrix.target }}/debug/cargo-prebuilt
