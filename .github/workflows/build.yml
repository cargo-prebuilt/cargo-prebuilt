name: Rust Build and Test

on:
  push:
    branches: [main]
    paths:
      - .github/workflows/build.yml
      - .cargo/**
      - keys/**
      - src/**
      - test/**
      - build.rs
      - Cargo.lock
      - Cargo.toml
  pull_request:
    branches: [main]
    paths:
      - .github/workflows/build.yml
      - .cargo/**
      - keys/**
      - src/**
      - test/**
      - build.rs
      - Cargo.lock
      - Cargo.toml
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  bin-name: cargo-prebuilt

permissions: {}

jobs:
  build-versions:
    strategy:
      fail-fast: false
      matrix:
        rust-version: [stable, beta, nightly, 1.71.1] # Stable, Beta, Nightly, MSRV
        info:
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            file_ext: .exe
          - os: windows-latest
            target: aarch64-pc-windows-msvc
            file_ext: .exe
    runs-on: ${{ matrix.info.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - uses: cargo-prebuilt/cargo-prebuilt-action@v4
        with:
          pkgs: cargo-auditable
      - uses: dtolnay/rust-toolchain@master
        id: toolchain
        with:
          toolchain: ${{ matrix.rust-version }}
          targets: ${{ matrix.info.target }}
          components: rust-src
      - uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.rust-version }}-${{ matrix.info.target }}
      - name: Test
        if: ${{ matrix.info.target != 'aarch64-pc-windows-msvc' }}
        run: cargo +${{steps.toolchain.outputs.name}} test --verbose --workspace --locked --target ${{ matrix.info.target }}
      - name: Build
        run: cargo +${{steps.toolchain.outputs.name}} auditable build --verbose --workspace --locked --target ${{ matrix.info.target }}
      - name: Test Run
        if: ${{ matrix.info.target != 'aarch64-pc-windows-msvc' }}
        run: |
          target/${{ matrix.info.target }}/debug/${{ env.bin-name }}${{ matrix.info.file_ext }} just
          just --version
          target/${{ matrix.info.target }}/debug/${{ env.bin-name }}${{ matrix.info.file_ext }} --color --out just
      - name: Artifact
        if: ${{ matrix.rust-version == 'nightly' }}
        uses: actions/upload-artifact@v4
        with:
          name: target-na-${{ matrix.info.target }}
          path: |
            target/${{ matrix.info.target }}/debug/${{ env.bin-name }}${{ matrix.info.file_ext }}

  build-ink-cross:
    strategy:
      matrix:
        rust-version: [stable, nightly]
        info:
          - target: aarch64-unknown-linux-gnu
          - target: aarch64-unknown-linux-musl
          - target: armv7-unknown-linux-gnueabihf
          - target: armv7-unknown-linux-musleabihf
          - target: powerpc64le-unknown-linux-gnu
          - target: powerpc64-unknown-linux-gnu
          - target: riscv64gc-unknown-linux-gnu
          - target: s390x-unknown-linux-gnu
          - target: x86_64-unknown-linux-gnu
          - target: x86_64-unknown-linux-musl
          - target: x86_64-unknown-freebsd
          - target: x86_64-unknown-netbsd
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - uses: Swatinem/rust-cache@v2
        with:
          key: ink-build-${{ matrix.rust-version }}-${{ matrix.info.target }}
      - name: Permission fix cargo registry
        run: mkdir -p "$HOME/.cargo/registry" && chown "$(id -u)":"$(id -g)" -R "$HOME/.cargo/registry"
      - name: Build with ink cross
        run: |
          docker run --rm \
          --userns host --user "$(id -u)":"$(id -g)" \
          -v "$HOME/.cargo/registry:/usr/local/cargo/registry" \
          -v ./:/project \
          ghcr.io/cargo-prebuilt/ink-cross:${{ matrix.rust-version }}-${{ matrix.info.target }} \
          auditable build --verbose --workspace --locked --target ${{ matrix.info.target }}
      - name: Artifact
        if: ${{ matrix.rust-version == 'nightly' }}
        uses: actions/upload-artifact@v4
        with:
          name: target-ic-${{ matrix.info.target }}
          path: |
            target/${{ matrix.info.target }}/debug/${{ env.bin-name }}
