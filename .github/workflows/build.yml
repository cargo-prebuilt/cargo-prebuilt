name: Rust Build and Test
### https://github.com/harmless-tech/rust-github-actions

on:
  push:
    branches: [ main ]
    paths: [ .github/workflows/build.yml, keys/**, src/**, test/**, build.rs, Cargo.lock, Cargo.toml, Cross.toml ]
  pull_request:
    branches: [ main ]
    paths: [ .github/workflows/build.yml, keys/**, src/**, test/**, build.rs, Cargo.lock, Cargo.toml, Cross.toml ]
  workflow_dispatch:

env:
  bin-name: cargo-prebuilt
  feature-set: '--no-default-features --features default-native'
  CARGO_TERM_COLOR: always

jobs:
  cross:
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            can-test: true
          - target: x86_64-unknown-linux-musl
            can-test: true
          - target: aarch64-unknown-linux-gnu
            can-test: true
          - target: aarch64-unknown-linux-musl
            can-test: true
          - target: x86_64-unknown-freebsd
            can-test: false
          - target: x86_64-unknown-netbsd
            can-test: false
          - target: x86_64-unknown-illumos
            can-test: false
          - target: x86_64-sun-solaris
            can-test: false
          - target: riscv64gc-unknown-linux-gnu
            can-test: true
          - target: powerpc64-unknown-linux-gnu
            can-test: true
          - target: powerpc64le-unknown-linux-gnu
            can-test: true
          - target: s390x-unknown-linux-gnu
            can-test: true
          - target: armv7-unknown-linux-gnueabihf
            can-test: true
          - target: armv7-unknown-linux-musleabihf
            can-test: true
          - target: x86_64-pc-windows-gnu
            can-test: true
            ending: .exe
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Update Rust and add target
        run: |
          rustup update
          rustc --version
          rustup target add ${{ matrix.target }}
      - uses: cargo-prebuilt/cargo-prebuilt-action@v3
        with:
          pkgs: cross
      - uses: Swatinem/rust-cache@v2
      - name: Run tests
        if: ${{ matrix.can-test }}
        run: cross test --verbose --workspace --locked --target ${{ matrix.target }} ${{ env.feature-set }}
      - name: Build
        run: cross build --verbose --workspace --locked --target ${{ matrix.target }} ${{ env.feature-set }}
      - name: Run cargo-prebuilt
        if: ${{ contains(matrix.target, 'x86_64-unknown-linux-') }}
        run: |
          target/${{ matrix.target }}/debug/${{ env.bin-name }} just
          just --version
          target/${{ matrix.target }}/debug/${{ env.bin-name }} --color just
      - name: Artifact
        uses: actions/upload-artifact@v3
        with:
          name: target-${{ matrix.target }}
          path: |
            target/${{ matrix.target }}/debug/${{ env.bin-name }}${{ matrix.ending }}

  apple-darwin:
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-apple-darwin
            can-test: true
          - target: aarch64-apple-darwin
            can-test: false
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Update Rust and add target
        run: |
          rustup update
          rustc --version
          rustup target add ${{ matrix.target }}
      - uses: cargo-prebuilt/cargo-prebuilt-action@v3
        with:
          pkgs: cargo-auditable
      - uses: Swatinem/rust-cache@v2
      - name: Run tests
        if: ${{ matrix.can-test }}
        run: cargo test --verbose --workspace --locked --target ${{ matrix.target }} ${{ env.feature-set }}
      - name: Build
        run: cargo auditable build --verbose --workspace --locked --target ${{ matrix.target }} ${{ env.feature-set }}
      - name: Run cargo-prebuilt
        if: ${{ matrix.can-test }}
        run: |
          target/${{ matrix.target }}/debug/${{ env.bin-name }} just
          just --version
          target/${{ matrix.target }}/debug/${{ env.bin-name }} --color just
      - name: Artifact
        uses: actions/upload-artifact@v3
        with:
          name: target-${{ matrix.target }}
          path: |
            target/${{ matrix.target }}/debug/${{ env.bin-name }}

  pc-windows-msvc:
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-pc-windows-msvc
            can-test: true
          - target: aarch64-pc-windows-msvc
            can-test: false
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Update Rust and add target
        run: |
          rustup update
          rustc --version
          rustup target add ${{ matrix.target }}
      - uses: cargo-prebuilt/cargo-prebuilt-action@v3
        with:
          pkgs: cargo-auditable
      - uses: Swatinem/rust-cache@v2
      - name: Run tests
        if: ${{ matrix.can-test }}
        run: cargo test --verbose --workspace --locked --target ${{ matrix.target }} ${{ env.feature-set }}
      - name: Build
        run: cargo auditable build --verbose --workspace --locked --target ${{ matrix.target }} ${{ env.feature-set }}
      - name: Run cargo-prebuilt
        if: ${{ matrix.can-test }}
        run: |
          target/${{ matrix.target }}/debug/${{ env.bin-name }}.exe just
          just --version
      - name: Artifact
        uses: actions/upload-artifact@v3
        with:
          name: target-${{ matrix.target }}
          path: |
            target/${{ matrix.target }}/debug/${{ env.bin-name }}.exe
