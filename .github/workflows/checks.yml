---
name: Rust Checks
### https://github.com/harmless-tech/rust-github-actions

on:
  push:
    branches: [main, releases/0.7]
    paths:
      - .github/workflows/checks.yml
      - keys/**
      - src/**
      - test/**
      - build.rs
      - Cargo.lock
      - Cargo.toml
      - Cross.toml
      - deny.toml
      - rustfmt.toml
  pull_request:
    branches: [main, releases/0.7]
    paths:
      - .github/workflows/checks.yml
      - keys/**
      - src/**
      - test/**
      - build.rs
      - Cargo.lock
      - Cargo.toml
      - Cross.toml
      - deny.toml
      - rustfmt.toml
  workflow_dispatch:

permissions: {}

env:
  feature-set: ""
  hack-group: "--group-features default,default-native,default-rustls,\
    default-no-tls,rustls,rustls-native-certs,native,vendored-openssl"
  CARGO_TERM_COLOR: never

defaults:
  run:
    shell: bash

jobs:
  fmt-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install nightly
        run: rustup toolchain install nightly --allow-downgrade -c rustfmt
      - name: Rustfmt Check
        run: |
          set -o pipefail
          cargo +nightly fmt --check 2>&1 | tee .step-data.txt
      - name: Put into summary (success)
        if: success()
        run: echo "Success" >> "$GITHUB_STEP_SUMMARY"
      - name: Put into summary (failure)
        if: failure()
        run: |
          {
            echo "Failed!"
            echo "\`\`\`shell"
            cat .step-data.txt
            echo "\`\`\`"
          } >> "$GITHUB_STEP_SUMMARY"

  reports:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Update Rust
        run: |
          rustup update
          rustc --version
      - uses: cargo-prebuilt/cargo-prebuilt-action@v4
        with:
          pkgs: cargo-audit,cargo-deny
      - uses: Swatinem/rust-cache@v2
      - name: Cache Advisory DB
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/advisory-db
          key: cache-advisory-db
      - name: Deps Report
        run: |
          test -f Cargo.lock || cargo generate-lockfile --verbose
          {
            echo "### Deps:"
            echo "Generated on: $(date --utc)"
            echo "\`\`\`"
            cargo tree --verbose -e normal,build --locked
            echo "\`\`\`"
          } >> "$GITHUB_STEP_SUMMARY"
      - name: Audit Report
        run: |
          {
            echo "### Audit:"
            echo "Generated on: $(date --utc)"
            echo "\`\`\`"
          } >> "$GITHUB_STEP_SUMMARY"
          cargo audit >> "$GITHUB_STEP_SUMMARY" || true
          echo "\`\`\`" >> "$GITHUB_STEP_SUMMARY"

  clippy:
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Update Rust
        run: |
          rustup update
          rustc --version
      - uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.target }}
      - name: Clippy Check
        run: |
          set -o pipefail
          cargo clippy --all-targets --verbose --workspace --locked \
          -- -D warnings 2>&1 | tee .step-data.txt
          cargo clippy --all-targets --verbose --workspace --locked \
          ${{ env.feature-set }} -- -D warnings 2>&1 | tee .step-data.txt
      - name: Put into summary (success)
        if: success()
        run: echo "Success" >> "$GITHUB_STEP_SUMMARY"
      - name: Put into summary (failure)
        if: failure()
        run: |
          {
            echo "Failed!"
            echo "\`\`\`shell"
            cat .step-data.txt
            echo "\`\`\`"
          } >> "$GITHUB_STEP_SUMMARY"

  cargo-hack:
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Update Rust
        run: |
          rustup update
          rustc --version
      - uses: cargo-prebuilt/cargo-prebuilt-action@v4
        with:
          pkgs: cargo-hack
      - uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.target }}
      - name: Hack Check (each-feature)
        run: |
          set -o pipefail
          cargo hack check --each-feature --no-dev-deps --verbose --workspace \
          --locked 2>&1 | tee .step-data.txt
      - name: Hack Check (feature-powerset)
        run: |
          set -o pipefail
          cargo hack check --feature-powerset ${{ env.hack-group }} \
          --no-dev-deps --verbose --workspace \
          --locked 2>&1 | tee .step-data.txt
      - name: Put into summary (success)
        if: success()
        run: echo "Success" >> "$GITHUB_STEP_SUMMARY"
      - name: Put into summary (failure)
        if: failure()
        run: |
          {
            echo "Failed!"
            echo "\`\`\`shell"
            cat .step-data.txt
            echo "\`\`\`"
          } >> "$GITHUB_STEP_SUMMARY"

  cargo-deny:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Update Rust
        run: |
          rustup update
          rustc --version
      - uses: cargo-prebuilt/cargo-prebuilt-action@v4
        with:
          pkgs: cargo-deny
      - name: Cargo Deny
        run: |
          set -o pipefail
          cargo deny check 2>&1 | tee .step-data.txt
      - name: Put into summary (success)
        if: success()
        run: echo "Success" >> "$GITHUB_STEP_SUMMARY"
      - name: Put into summary (failure)
        if: failure()
        run: |
          {
            echo "Failed!"
            echo "\`\`\`shell"
            cat .step-data.txt
            echo "\`\`\`"
          } >> "$GITHUB_STEP_SUMMARY"
